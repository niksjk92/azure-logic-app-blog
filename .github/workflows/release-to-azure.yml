name: Deploy to azure Production environment
on:
  release:
    types: [ released ]
jobs:
  terraform-plan-prod:
    name: Plan TF deployment resources to Azure prod account
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: ./prod/
    env:
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.2

      - name: Run terraform Init
        run: terraform init

      - name: Run Terraform plan
        run: terraform plan -input=false -no-color -out prod-tf-${{ github.sha }}.plan

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          # Artifact name
          name: prod-tf-${{ github.sha }}.plan # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: prod/prod-tf-${{ github.sha }}.plan
          # The desired behavior if no files are found using the provided path.

          if-no-files-found: error # optional, default is warn
          # Duration after which artifact will expire in days. 0 means using default retention.
          retention-days: 3 # optional
  terraform-deploy-prod:
    name: Deploy resources to azure prod environment
    runs-on: ubuntu-latest
    environment: production
    needs: [ terraform-plan-prod ]
    defaults:
      run:
        working-directory: ./prod/
    env:
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.2

      - name: Run terraform Init
        run: terraform init

      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.1.1
        with:
          # Artifact name
          name: prod-tf-${{ github.sha }}.plan # optional
          # Destination path
          path: /tmp/ # optional

      - name: Run Terraform apply
        run: terraform apply /tmp/prod-tf-${{ github.sha }}.plan
  package-workflows-prod:
    name: Package to azure standard logic app
    runs-on: ubuntu-latest
    needs: terraform-deploy-prod
    defaults:
      run:
        working-directory: ./workflows/
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v3

      - name: Create project folder
        run: |
          mkdir output
          cp *.json 'output/'
          cp -r maas-* 'output/'
          cp parameters/pre-prod/parameters.json 'output/'

      - name: Zip files in output dir
        run: |
          zip -r ${{ github.run_id }}.zip output
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          # Artifact name
          name: ${{ github.run_id }}.zip # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: workflows/${{ github.run_id }}.zip
          # The desired behavior if no files are found using the provided path.
  deploy-workflow-to-dev:
    name: Deploy workflows to azure standard logic app
    runs-on: ubuntu-latest
    needs: package-workflows-dev
    environment: production
    env:
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.1.1
        with:
          name: ${{ github.run_id }}.zip

      - name: Unzip github artifact
        run: |
          unzip ${{ github.run_id }}.zip
          rm ${{ github.run_id }}.zip
          cp -r output/* .
          rm -rf output


      - name: Run Azure webapp deploy action using publish profile credentials
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{vars.AZURE_FA_NAME}}
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
